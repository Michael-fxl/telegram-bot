import os
import asyncio
from aiogram import Bot, Dispatcher, types, F
from aiogram.types import Message
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.enums import ParseMode

# ‚û§ –ó–∞–º—ñ–Ω–∏ —Ü—ñ –∑–Ω–∞—á–µ–Ω–Ω—è:
BOT_TOKEN = os.getenv("7676603214:AAGDNVjOjOh2kbG8jqfLRBcctBiNe-HQb-s")  # —Ç–æ–∫–µ–Ω –∑ BotFather
GROUP_ID = os.getenv("1002352802922")    # ID —Ç–≤–æ—î—ó –≥—Ä—É–ø–∏ –≤ Telegram (–º–∞—î –±—É—Ç–∏ —Ç–∏–ø—É: -1001234567890)

bot = Bot(token=BOT_TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher(storage=MemoryStorage())

# –°—Ç–∞–Ω –º–∞—à–∏–Ω–∏ –¥–ª—è –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è
class AdForm(StatesGroup):
    text = State()

@dp.message(F.text == "/–¥–æ–¥–∞—Ç–∏")
async def start_add(message: Message, state: FSMContext):
    await message.answer("‚úçÔ∏è –í–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è:")
    await state.set_state(AdForm.text)

@dp.message(AdForm.text)
async def receive_ad(message: Message, state: FSMContext):
    ad_text = message.text
    user = message.from_user.full_name
    final_text = f"<b>üì¢ –û–≥–æ–ª–æ—à–µ–Ω–Ω—è –≤—ñ–¥ {user}:</b>\n\n{ad_text}"
    
    # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –≤ –≥—Ä—É–ø—É
    await bot.send_message(chat_id=int(GROUP_ID), text=final_text)
    await message.answer("‚úÖ –û–≥–æ–ª–æ—à–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ!")
    await state.clear()

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
